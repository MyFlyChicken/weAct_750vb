CONFIG_I2C=y
# CONFIG_INIT_STACKS is not set
CONFIG_HW_STACK_PROTECTION=y
CONFIG_GPIO=y
CONFIG_CONSOLE=y
CONFIG_MCUBOOT_GENERATE_CONFIRMED_IMAGE=y
CONFIG_BOOTLOADER_MCUBOOT=y
CONFIG_MCUBOOT_SIGNATURE_KEY_FILE="bootloader/mcuboot/root-rsa-2048.pem"
CONFIG_MCUBOOT_IMGTOOL_SIGN_VERSION="0.0.1"
CONFIG_ARM_MPU=y
# CONFIG_INIT_ARCH_HW_AT_BOOT is not set
# CONFIG_THREAD_MONITOR is not set
# CONFIG_THREAD_NAME is not set
# CONFIG_DEVICE_DT_METADATA is not set
CONFIG_UART_CONSOLE=y
CONFIG_DISPLAY=n
CONFIG_GPIO_SHELL=y
CONFIG_I2C_SHELL=n
CONFIG_SPI_SHELL=y
CONFIG_SHELL=y


# ------------------------------------------------------------------
# MCUboot / placement settings
# Ensure the application image is built to the same flash location
# that MCUboot expects. On this board the external QSPI NOR is
# mapped as an XIP device (typically at 0x90000000) and the
# image partition 'image-0' in the board DTS starts at offset 0x0
# within that device. To let MCUboot jump to the app in external
# flash (direct-XIP), set the load offset to the QSPI mapping.
# Replace the offset below if your QSPI is mapped elsewhere.
# ------------------------------------------------------------------
CONFIG_USE_DT_CODE_PARTITION=y
CONFIG_XIP=y
# If your external QSPI is memory-mapped at 0x90000000, set the
# FLASH_LOAD_OFFSET so the generated binary lines up with that
# address when flashing. Change to match your board's DT if needed.
# CONFIG_FLASH_LOAD_OFFSET=0x90000000

# MCUboot signing (ensure the referenced key exists or generate one)
CONFIG_MCUBOOT_GENERATE_CONFIRMED_IMAGE=y
CONFIG_MCUBOOT_SIGNATURE_KEY_FILE="bootloader/mcuboot/root-rsa-2048.pem"

